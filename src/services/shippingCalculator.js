// src/services/shippingCalculator.js
const { getThaiTime } = require("./timeService");

const VALID_RANKS = ["silver rabbit", "diamond rabbit", "star rabbit"];
const VALID_TYPES = ["‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ", "‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó 1,2", "‡∏û‡∏¥‡πÄ‡∏®‡∏©"];
const VALID_TRANSPORT = ["‡∏£‡∏ñ", "‡πÄ‡∏£‡∏∑‡∏≠"];

/**
 * ‡∏î‡∏∂‡∏á‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á
 * @returns {string} ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥
 */
function getShippingInstructions() {
  return `üìù ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á:
1Ô∏è‚É£ ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ï‡∏≤‡∏°‡∏•‡∏≥‡∏î‡∏±‡∏ö ‡πÇ‡∏î‡∏¢‡∏Ñ‡∏±‡πà‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢ ,):
   Rank, ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤, ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å, ‡∏Ç‡∏ô‡∏≤‡∏î, ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Ç‡∏ô‡∏™‡πà‡∏á
2Ô∏è‚É£ ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏Å:
   silver rabbit, ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ, 12kg, 50x40x30 ‡∏ã‡∏°., ‡∏£‡∏ñ
3Ô∏è‚É£ ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö:
   üèÖ Rank: ${VALID_RANKS.join(", ")}
   üì¶ ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: ${VALID_TYPES.join(", ")}
   ‚öñÔ∏è ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å: ‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ï‡∏≤‡∏°‡∏î‡πâ‡∏ß‡∏¢ kg (‡πÄ‡∏ä‡πà‡∏ô 12kg)
   üìê ‡∏Ç‡∏ô‡∏≤‡∏î: ‡∏Å‡∏ß‡πâ‡∏≤‡∏áx‡∏¢‡∏≤‡∏ßx‡∏™‡∏π‡∏á ‡∏ã‡∏°. (‡πÄ‡∏ä‡πà‡∏ô 50x40x30 ‡∏ã‡∏°.)
   üöõ ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Ç‡∏ô‡∏™‡πà‡∏á: ${VALID_TRANSPORT.join(", ")}`;
}

/**
 * ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
 * @param {Object} params - ‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
 * @returns {string[]} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡∏û‡∏ö
 */
function validateInput(params) {
  const errors = [];

  if (!params.rank || !VALID_RANKS.includes(params.rank.toLowerCase())) {
    errors.push(`Rank ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô: ${VALID_RANKS.join(", ")})`);
  }

  if (!params.type || !VALID_TYPES.includes(params.type)) {
    errors.push(`‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô: ${VALID_TYPES.join(", ")})`);
  }

  if (!params.weight || !params.weight.match(/^\d+(\.\d+)?kg$/)) {
    errors.push("‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ï‡∏≤‡∏°‡∏î‡πâ‡∏ß‡∏¢ kg ‡πÄ‡∏ä‡πà‡∏ô 12kg)");
  }

  if (!params.dimensions || !params.dimensions.match(/^\d+x\d+x\d+\s*‡∏ã‡∏°\.?$/)) {
    errors.push("‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏õ‡πá‡∏ô ‡∏Åx‡∏¢x‡∏™ ‡∏ã‡∏°. ‡πÄ‡∏ä‡πà‡∏ô 50x40x30 ‡∏ã‡∏°.)");
  }

  if (!params.transport || !VALID_TRANSPORT.includes(params.transport)) {
    errors.push(
      `‡∏ß‡∏¥‡∏ò‡∏µ‡∏Ç‡∏ô‡∏™‡πà‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô: ${VALID_TRANSPORT.join(", ")})`
    );
  }

  return errors;
}

/**
 * ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå
 * @param {string} input - ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
 * @returns {Object} ‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÅ‡∏¢‡∏Å‡πÅ‡∏•‡πâ‡∏ß
 */
function parseInput(input) {
  try {
    if (input.includes(",")) {
      const [rank, type, weight, dimensions, transport] = input
        .split(",")
        .map((s) => s.trim());
      return { rank, type, weight, dimensions, transport };
    }

    const lines = input.split("\n");
    const params = {};

    lines.forEach((line) => {
      const [key, value] = line.split(":").map((s) => s.trim());
      switch (key.toLowerCase()) {
        case "rank":
          params.rank = value;
          break;
        case "‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó":
          params.type = value;
          break;
        case "‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å":
          params.weight = value;
          break;
        case "‡∏Ç‡∏ô‡∏≤‡∏î":
          params.dimensions = value;
          break;
        case "‡∏Ç‡∏ô‡∏™‡πà‡∏á":
          params.transport = value;
          break;
      }
    });

    return params;
  } catch (error) {
    console.error("Error parsing input:", error);
    throw new Error("‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•");
  }
}

/**
 * ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ï‡∏£ (CBM)
 * @param {string} dimensions - ‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö ‡∏Åx‡∏¢x‡∏™
 * @returns {number} ‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ï‡∏£‡πÄ‡∏õ‡πá‡∏ô CBM
 */
function calculateCBM(dimensions) {
  const [width, length, height] = dimensions
    .toLowerCase()
    .replace("‡∏ã‡∏°.", "")
    .split("x")
    .map(Number);
  return (width * length * height) / 1000000;
}

/**
 * ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á
 * @param {string} rank - ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
 * @param {string} type - ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
 * @param {number} weight - ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡πÄ‡∏õ‡πá‡∏ô kg
 * @param {number} cbm - ‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ï‡∏£‡πÄ‡∏õ‡πá‡∏ô CBM
 * @param {string} transport - ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Ç‡∏ô‡∏™‡πà‡∏á
 * @returns {number} ‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á
 */
function calculateShippingFee(rank, type, weight, cbm, transport) {
  const rates = {
    car: {
      "silver rabbit": {
        ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ: { perKg: 50, perCBM: 7500 },
        "‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó 1,2": { perKg: 60, perCBM: 8500 },
        ‡∏û‡∏¥‡πÄ‡∏®‡∏©: { perKg: 120, perCBM: 12000 },
      },
      "diamond rabbit": {
        ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ: { perKg: 45, perCBM: 7300 },
        "‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó 1,2": { perKg: 55, perCBM: 8300 },
        ‡∏û‡∏¥‡πÄ‡∏®‡∏©: { perKg: 110, perCBM: 11000 },
      },
      "star rabbit": {
        ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ: { perKg: 40, perCBM: 6800 },
        "‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó 1,2": { perKg: 50, perCBM: 7800 },
        ‡∏û‡∏¥‡πÄ‡∏®‡∏©: { perKg: 100, perCBM: 10000 },
      },
    },
    ship: {
      "silver rabbit": {
        ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ: { perKg: 45, perCBM: 5400 },
        "‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó 1,2": { perKg: 50, perCBM: 6900 },
        ‡∏û‡∏¥‡πÄ‡∏®‡∏©: { perKg: 120, perCBM: 12000 },
      },
      "diamond rabbit": {
        ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ: { perKg: 40, perCBM: 4900 },
        "‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó 1,2": { perKg: 50, perCBM: 6500 },
        ‡∏û‡∏¥‡πÄ‡∏®‡∏©: { perKg: 110, perCBM: 11000 },
      },
      "star rabbit": {
        ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ: { perKg: 35, perCBM: 4500 },
        "‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó 1,2": { perKg: 45, perCBM: 6300 },
        ‡∏û‡∏¥‡πÄ‡∏®‡∏©: { perKg: 100, perCBM: 10000 },
      },
    },
  };

  const transportType = transport === "‡∏£‡∏ñ" ? "car" : "ship";
  const rateTable = rates[transportType][rank.toLowerCase()][type];

  const byWeight = weight * rateTable.perKg;
  const byCBM = cbm * rateTable.perCBM;

  return Math.max(byWeight, byCBM);
}

/**
 * ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Intent ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á
 * @param {DialogflowAgent} agent - Dialogflow agent
 * @param {FirebaseDatabase} db - Firebase database instance
 */
async function handleShippingCalculation(agent, db) {
  try {
    const input = agent.query.trim();

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ñ‡πâ‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ñ‡∏≤‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì
    if (input.match(/‡∏ß‡∏¥‡∏ò‡∏µ|‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì|‡∏Ñ‡∏¥‡∏î|‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£|‡∏¢‡∏±‡∏á‡πÑ‡∏á|‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏Å|‡∏Å‡∏£‡∏≠‡∏Å/i)) {
      agent.add(getShippingInstructions());
      return;
    }

    const params = parseInput(input);
    const validationErrors = validateInput(params);

    if (validationErrors.length > 0) {
      agent.add(
        `‚ùå ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:\n\n${validationErrors.join(
          "\n"
        )}\n\n${getShippingInstructions()}`
      );
      return;
    }

    // ‡πÅ‡∏õ‡∏•‡∏á‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç
    const weight = parseFloat(params.weight.replace("kg", ""));
    const cbm = calculateCBM(params.dimensions);

    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á
    const shippingFee = calculateShippingFee(
      params.rank,
      params.type,
      weight,
      cbm,
      params.transport
    );
    const isCalculatedByCBM = cbm > weight;

    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏•‡∏á Firebase
    const userId =
      agent.originalRequest?.payload?.data?.source?.userId || "unknown";
    const calculationRef = db.ref(`shipping_calculations/${userId}`);
    await calculationRef.push({
      timestamp: getThaiTime().toISOString(),
      params,
      weight,
      cbm,
      shippingFee,
      calculatedBy: isCalculatedByCBM ? "CBM" : "KG",
    });

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö
    const response =
      `üöö ‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÑ‡∏î‡πâ‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ:\n\n` +
      `üìå Rank: ${params.rank}\n` +
      `üì¶ ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: ${params.type}\n` +
      `‚öñÔ∏è ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å: ${weight}kg\n` +
      `üìê ‡∏Ç‡∏ô‡∏≤‡∏î: ${params.dimensions}\n` +
      `üõ£ ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Ç‡∏ô‡∏™‡πà‡∏á: ${params.transport}\n\n` +
      `‚úÖ ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ñ‡∏π‡∏Å‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏õ‡πá‡∏ô ${isCalculatedByCBM ? "CBM" : "KG"}\n` +
      `üí∞ ‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á‡∏à‡∏≤‡∏Å‡∏à‡∏µ‡∏ô‡∏°‡∏≤‡πÑ‡∏ó‡∏¢: ${shippingFee.toFixed(2)} ‡∏ö‡∏≤‡∏ó\n` +
      `üöõ ‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á‡πÉ‡∏ô‡πÑ‡∏ó‡∏¢: ‡∏£‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó (‡∏ü‡∏£‡∏µ)\n` +
      `üìå ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á: ${shippingFee.toFixed(2)} ‡∏ö‡∏≤‡∏ó`;

    agent.add(response);
  } catch (error) {
    console.error("‚ùå Error in handleShippingCalculation:", error);
    agent.add(
      `‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢ ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì\n\n${getShippingInstructions()}`
    );
  }
}

module.exports = {
  calculateCBM,
  calculateShippingFee,
  handleShippingCalculation,
  getShippingInstructions,
  validateInput,
  parseInput,
};
