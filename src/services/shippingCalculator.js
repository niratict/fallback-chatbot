// src/services/shippingCalculator.js
const { getThaiTime } = require("./timeService");

/**
 * ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå
 * @param {string} input - ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
 * @returns {Object} ‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÅ‡∏¢‡∏Å‡πÅ‡∏•‡πâ‡∏ß
 */
function parseInput(input) {
  // ‡∏Å‡∏£‡∏ì‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ö‡∏ö‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
  if (input.includes(",")) {
    const [rank, type, weight, dimensions, transport] = input
      .split(",")
      .map((s) => s.trim());
    return { rank, type, weight, dimensions, transport };
  }

  // ‡∏Å‡∏£‡∏ì‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ö‡∏ö‡∏´‡∏•‡∏≤‡∏¢‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î
  const lines = input.split("\n");
  const params = {};

  lines.forEach((line) => {
    const [key, value] = line.split(":").map((s) => s.trim());
    switch (key.toLowerCase()) {
      case "rank":
        params.rank = value;
        break;
      case "‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó":
        params.type = value;
        break;
      case "‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å":
        params.weight = value;
        break;
      case "‡∏Ç‡∏ô‡∏≤‡∏î":
        params.dimensions = value;
        break;
      case "‡∏Ç‡∏ô‡∏™‡πà‡∏á":
        params.transport = value;
        break;
    }
  });

  return params;
}

/**
 * ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ï‡∏£ (CBM)
 * @param {string} dimensions - ‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö ‡∏Åx‡∏¢x‡∏™
 * @returns {number} ‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ï‡∏£‡πÄ‡∏õ‡πá‡∏ô CBM
 */
function calculateCBM(dimensions) {
  const [width, length, height] = dimensions
    .toLowerCase()
    .replace("‡∏ã‡∏°.", "")
    .split("x")
    .map(Number);
  return (width * length * height) / 1000000;
}

/**
 * ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á
 * @param {string} rank - ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
 * @param {string} type - ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
 * @param {number} weight - ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡πÄ‡∏õ‡πá‡∏ô kg
 * @param {number} cbm - ‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ï‡∏£‡πÄ‡∏õ‡πá‡∏ô CBM
 * @param {string} transport - ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Ç‡∏ô‡∏™‡πà‡∏á
 * @returns {number} ‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á
 */
function calculateShippingFee(rank, type, weight, cbm, transport) {
  const rates = {
    car: {
      "silver rabbit": {
        ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ: { perKg: 50, perCBM: 7500 },
        "‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó 1,2": { perKg: 60, perCBM: 8500 },
        ‡∏û‡∏¥‡πÄ‡∏®‡∏©: { perKg: 120, perCBM: 12000 },
      },
      "diamond rabbit": {
        ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ: { perKg: 45, perCBM: 7300 },
        "‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó 1,2": { perKg: 55, perCBM: 8300 },
        ‡∏û‡∏¥‡πÄ‡∏®‡∏©: { perKg: 110, perCBM: 11000 },
      },
      "star rabbit": {
        ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ: { perKg: 40, perCBM: 6800 },
        "‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó 1,2": { perKg: 50, perCBM: 7800 },
        ‡∏û‡∏¥‡πÄ‡∏®‡∏©: { perKg: 100, perCBM: 10000 },
      },
    },
    ship: {
      "silver rabbit": {
        ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ: { perKg: 45, perCBM: 5400 },
        "‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó 1,2": { perKg: 50, perCBM: 6900 },
        ‡∏û‡∏¥‡πÄ‡∏®‡∏©: { perKg: 120, perCBM: 12000 },
      },
      "diamond rabbit": {
        ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ: { perKg: 40, perCBM: 4900 },
        "‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó 1,2": { perKg: 50, perCBM: 6500 },
        ‡∏û‡∏¥‡πÄ‡∏®‡∏©: { perKg: 110, perCBM: 11000 },
      },
      "star rabbit": {
        ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ: { perKg: 35, perCBM: 4500 },
        "‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó 1,2": { perKg: 45, perCBM: 6300 },
        ‡∏û‡∏¥‡πÄ‡∏®‡∏©: { perKg: 100, perCBM: 10000 },
      },
    },
  };

  const transportType = transport === "‡∏£‡∏ñ" ? "car" : "ship";
  const rateTable = rates[transportType][rank.toLowerCase()][type];

  // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡πÅ‡∏ö‡∏ö kg ‡πÅ‡∏•‡∏∞ CBM
  const byWeight = weight * rateTable.perKg;
  const byCBM = cbm * rateTable.perCBM;

  // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤
  return Math.max(byWeight, byCBM);
}

/**
 * ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Intent ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á
 * @param {DialogflowAgent} agent - Dialogflow agent
 * @param {FirebaseDatabase} db - Firebase database instance
 */
async function handleShippingCalculation(agent, db) {
  try {
    const input = agent.query;
    const params = parseInput(input);

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
    if (
      !params.rank ||
      !params.type ||
      !params.weight ||
      !params.dimensions ||
      !params.transport
    ) {
      agent.add(
        "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö:\nRank: [‡∏£‡∏∞‡∏î‡∏±‡∏ö]\n‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó: [‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤]\n‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å: [‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å]kg\n‡∏Ç‡∏ô‡∏≤‡∏î: [‡∏Å‡∏ß‡πâ‡∏≤‡∏á]x[‡∏¢‡∏≤‡∏ß]x[‡∏™‡∏π‡∏á] ‡∏ã‡∏°.\n‡∏Ç‡∏ô‡∏™‡πà‡∏á: [‡∏£‡∏ñ/‡πÄ‡∏£‡∏∑‡∏≠]"
      );
      return;
    }

    // ‡πÅ‡∏õ‡∏•‡∏á‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç
    const weight = parseFloat(params.weight.replace("kg", ""));
    const cbm = calculateCBM(params.dimensions);

    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á
    const shippingFee = calculateShippingFee(
      params.rank,
      params.type,
      weight,
      cbm,
      params.transport
    );
    const isCalculatedByCBM = cbm > weight;

    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏•‡∏á Firebase
    const userId =
      agent.originalRequest?.payload?.data?.source?.userId || "unknown";
    const calculationRef = db.ref(`shipping_calculations/${userId}`);
    await calculationRef.push({
      timestamp: getThaiTime().toISOString(),
      params,
      weight,
      cbm,
      shippingFee,
      calculatedBy: isCalculatedByCBM ? "CBM" : "KG",
    });

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö
    const response =
      `üöö ‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÑ‡∏î‡πâ‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ:\n\n` +
      `üìå Rank: ${params.rank}\n` +
      `üì¶ ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: ${params.type}\n` +
      `‚öñÔ∏è ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å: ${weight}kg\n` +
      `üìê ‡∏Ç‡∏ô‡∏≤‡∏î: ${params.dimensions}\n` +
      `üõ£ ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Ç‡∏ô‡∏™‡πà‡∏á: ${params.transport}\n\n` +
      `‚úÖ ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ñ‡∏π‡∏Å‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏õ‡πá‡∏ô ${isCalculatedByCBM ? "CBM" : "KG"}\n` +
      `üí∞ ‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á‡∏à‡∏≤‡∏Å‡∏à‡∏µ‡∏ô‡∏°‡∏≤‡πÑ‡∏ó‡∏¢: ${shippingFee.toFixed(2)} ‡∏ö‡∏≤‡∏ó\n` +
      `üöõ ‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á‡πÉ‡∏ô‡πÑ‡∏ó‡∏¢: ‡∏£‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó (‡∏ü‡∏£‡∏µ)\n` +
      `üìå ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á: ${shippingFee.toFixed(2)} ‡∏ö‡∏≤‡∏ó`;

    agent.add(response);
  } catch (error) {
    console.error("‚ùå Error in handleShippingCalculation:", error);
    agent.add("‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢ ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á");
  }
}

module.exports = {
  calculateCBM,
  calculateShippingFee,
  handleShippingCalculation,
};
